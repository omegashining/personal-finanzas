/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Estado.java
 *
 * Created on 29/11/2009, 11:54:21 AM
 */

package estados;

/**
 *
 * @author Gabriel
 */
public class Estado extends javax.swing.JInternalFrame {

    /** Creates new form Estado */
    public Estado() {
        initComponents();
    }

    protected String titulo( int o ){
        String txt = "";

        switch( o ){
            case 0:
                txt += "                              ";
                break;
            case 1:
                txt += "menos                         ";
                break;
            case 2:
                txt += "más                           ";
                break;
            case 3:
                txt += "  Ventas                      ";
                break;
            case 4:
                txt += "  Costo de Ventas             ";
                break;
            case 5:
                txt += "  Utilidad Bruta              ";
                break;
            case 6:
                txt += "  Gastos de Operación         ";
                break;
            case 7:
                txt += "  Utilidad de Operación       ";
                break;
            case 8:
                txt += "  Otros gastos                ";
                break;
            case 9:
                txt += "  Otros Productos             ";
                break;
            case 10:
                txt += "  Utilidad Neta               ";
                break;
        }

        return txt;
    }

    protected String valor( double v ) {
        int enteros = (int) v;
        int decimales = (int) ((v - (double) enteros) * 100);
        String cadena1 = String.valueOf(enteros);
        String cadena2 = String.valueOf(decimales);
        String espacios = "";

        for( int i = 0; i < 9-cadena1.length(); i++ )
            espacios += " ";
        espacios += enteros + "." + decimales;
        for( int i = 0; i < 4 - cadena2.length(); i++ )
            espacios += " ";

        return espacios;
    }

    protected String espacios( int o ){
        String espacios = "";

        switch( o ){
            case 0:
                espacios += "              ";
                break;
            case 1:
                espacios += "                             ";
                break;
            case 2:
                espacios += "------------  ";
                break;
            case 3:
                espacios += "------------   ------------  ";
                break;
        }

        return espacios;
    }

    protected String numero( double n ){
        boolean condicion = true;
        if( n >= 0 )
            condicion = false;
        else
            n = n * -1;

        String c = "";
        int enteros = (int) n;
        int decimales = (int) ((n - (double) enteros) * 100);
        String cadena1 = String.valueOf(enteros);
        String cadena2 = String.valueOf(decimales);

        for( int i = 0; i < 9-cadena1.length(); i++ )
            c += " ";
        if( condicion )
           c += "(" + enteros + "." + decimales + ")";
        else
           c += " " + enteros + "." + decimales + " ";
        for( int i = 0; i < 3 - cadena2.length(); i++ )
            c += " ";

        return c;
    }

    protected String diferencias( double s1, double s2){
        String aux = "";

        double num = s2-s1;
        aux += numero(num);

        return aux;
    }

    protected String porcenToString( double n ){
        if( n < 0 )
            n = n * -1;

        String c = "";
        int enteros = (int) n;
        int decimales = (int) ((n - (double) enteros) * 100);
        String cadena1 = String.valueOf(enteros);
        String cadena2 = String.valueOf(decimales);

        for( int i = 0; i < 4-cadena1.length(); i++ )
            c += " ";
        c += " " + enteros + "." + decimales + "%";
        for( int i = 0; i < 3 - cadena2.length(); i++ )
            c += " ";

        return c;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setName("Form"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 274, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
